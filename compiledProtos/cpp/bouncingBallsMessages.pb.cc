// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bouncingBallsMessages.proto

#include "bouncingBallsMessages.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_bouncingBallsMessages_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_bouncingBallsMessages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Ball;
}  // namespace protobuf_bouncingBallsMessages_2eproto
namespace ballProto {
class stateUpdateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<stateUpdate>
      _instance;
} _stateUpdate_default_instance_;
class BallDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Ball>
      _instance;
} _Ball_default_instance_;
}  // namespace ballProto
namespace protobuf_bouncingBallsMessages_2eproto {
static void InitDefaultsstateUpdate() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ballProto::_stateUpdate_default_instance_;
    new (ptr) ::ballProto::stateUpdate();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ballProto::stateUpdate::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_stateUpdate =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsstateUpdate}, {
      &protobuf_bouncingBallsMessages_2eproto::scc_info_Ball.base,}};

static void InitDefaultsBall() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ballProto::_Ball_default_instance_;
    new (ptr) ::ballProto::Ball();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ballProto::Ball::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Ball =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBall}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_stateUpdate.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Ball.base);
}

::google::protobuf::Metadata file_level_metadata[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ballProto::stateUpdate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ballProto::stateUpdate, balls_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ballProto::stateUpdate, ballcount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ballProto::stateUpdate, timeutc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ballProto::stateUpdate, xmax_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ballProto::stateUpdate, ymax_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ballProto::Ball, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ballProto::Ball, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ballProto::Ball, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ballProto::Ball, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ballProto::Ball, vx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ballProto::Ball, vy_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ballProto::Ball, r_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::ballProto::stateUpdate)},
  { 10, -1, sizeof(::ballProto::Ball)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::ballProto::_stateUpdate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ballProto::_Ball_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "bouncingBallsMessages.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\033bouncingBallsMessages.proto\022\tballProto"
      "\"m\n\013stateUpdate\022\036\n\005balls\030\001 \003(\0132\017.ballPro"
      "to.Ball\022\021\n\tballCount\030\002 \001(\005\022\017\n\007timeUTC\030\003 "
      "\001(\005\022\014\n\004xMax\030\004 \001(\005\022\014\n\004yMax\030\005 \001(\005\"K\n\004Ball\022"
      "\n\n\002id\030\001 \001(\005\022\t\n\001x\030\002 \001(\001\022\t\n\001y\030\003 \001(\001\022\n\n\002vx\030"
      "\004 \001(\001\022\n\n\002vy\030\005 \001(\001\022\t\n\001r\030\006 \001(\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 236);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "bouncingBallsMessages.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_bouncingBallsMessages_2eproto
namespace ballProto {

// ===================================================================

void stateUpdate::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int stateUpdate::kBallsFieldNumber;
const int stateUpdate::kBallCountFieldNumber;
const int stateUpdate::kTimeUTCFieldNumber;
const int stateUpdate::kXMaxFieldNumber;
const int stateUpdate::kYMaxFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

stateUpdate::stateUpdate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_bouncingBallsMessages_2eproto::scc_info_stateUpdate.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ballProto.stateUpdate)
}
stateUpdate::stateUpdate(const stateUpdate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      balls_(from.balls_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&ballcount_, &from.ballcount_,
    static_cast<size_t>(reinterpret_cast<char*>(&ymax_) -
    reinterpret_cast<char*>(&ballcount_)) + sizeof(ymax_));
  // @@protoc_insertion_point(copy_constructor:ballProto.stateUpdate)
}

void stateUpdate::SharedCtor() {
  ::memset(&ballcount_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ymax_) -
      reinterpret_cast<char*>(&ballcount_)) + sizeof(ymax_));
}

stateUpdate::~stateUpdate() {
  // @@protoc_insertion_point(destructor:ballProto.stateUpdate)
  SharedDtor();
}

void stateUpdate::SharedDtor() {
}

void stateUpdate::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* stateUpdate::descriptor() {
  ::protobuf_bouncingBallsMessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bouncingBallsMessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const stateUpdate& stateUpdate::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_bouncingBallsMessages_2eproto::scc_info_stateUpdate.base);
  return *internal_default_instance();
}


void stateUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:ballProto.stateUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  balls_.Clear();
  ::memset(&ballcount_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ymax_) -
      reinterpret_cast<char*>(&ballcount_)) + sizeof(ymax_));
  _internal_metadata_.Clear();
}

bool stateUpdate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ballProto.stateUpdate)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ballProto.Ball balls = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_balls()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 ballCount = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ballcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 timeUTC = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &timeutc_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 xMax = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &xmax_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 yMax = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ymax_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ballProto.stateUpdate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ballProto.stateUpdate)
  return false;
#undef DO_
}

void stateUpdate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ballProto.stateUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ballProto.Ball balls = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->balls_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->balls(static_cast<int>(i)),
      output);
  }

  // int32 ballCount = 2;
  if (this->ballcount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->ballcount(), output);
  }

  // int32 timeUTC = 3;
  if (this->timeutc() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->timeutc(), output);
  }

  // int32 xMax = 4;
  if (this->xmax() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->xmax(), output);
  }

  // int32 yMax = 5;
  if (this->ymax() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->ymax(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ballProto.stateUpdate)
}

::google::protobuf::uint8* stateUpdate::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ballProto.stateUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ballProto.Ball balls = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->balls_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->balls(static_cast<int>(i)), deterministic, target);
  }

  // int32 ballCount = 2;
  if (this->ballcount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->ballcount(), target);
  }

  // int32 timeUTC = 3;
  if (this->timeutc() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->timeutc(), target);
  }

  // int32 xMax = 4;
  if (this->xmax() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->xmax(), target);
  }

  // int32 yMax = 5;
  if (this->ymax() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->ymax(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ballProto.stateUpdate)
  return target;
}

size_t stateUpdate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ballProto.stateUpdate)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .ballProto.Ball balls = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->balls_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->balls(static_cast<int>(i)));
    }
  }

  // int32 ballCount = 2;
  if (this->ballcount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ballcount());
  }

  // int32 timeUTC = 3;
  if (this->timeutc() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->timeutc());
  }

  // int32 xMax = 4;
  if (this->xmax() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->xmax());
  }

  // int32 yMax = 5;
  if (this->ymax() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ymax());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void stateUpdate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ballProto.stateUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  const stateUpdate* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const stateUpdate>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ballProto.stateUpdate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ballProto.stateUpdate)
    MergeFrom(*source);
  }
}

void stateUpdate::MergeFrom(const stateUpdate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ballProto.stateUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  balls_.MergeFrom(from.balls_);
  if (from.ballcount() != 0) {
    set_ballcount(from.ballcount());
  }
  if (from.timeutc() != 0) {
    set_timeutc(from.timeutc());
  }
  if (from.xmax() != 0) {
    set_xmax(from.xmax());
  }
  if (from.ymax() != 0) {
    set_ymax(from.ymax());
  }
}

void stateUpdate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ballProto.stateUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void stateUpdate::CopyFrom(const stateUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ballProto.stateUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool stateUpdate::IsInitialized() const {
  return true;
}

void stateUpdate::Swap(stateUpdate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void stateUpdate::InternalSwap(stateUpdate* other) {
  using std::swap;
  CastToBase(&balls_)->InternalSwap(CastToBase(&other->balls_));
  swap(ballcount_, other->ballcount_);
  swap(timeutc_, other->timeutc_);
  swap(xmax_, other->xmax_);
  swap(ymax_, other->ymax_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata stateUpdate::GetMetadata() const {
  protobuf_bouncingBallsMessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bouncingBallsMessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Ball::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Ball::kIdFieldNumber;
const int Ball::kXFieldNumber;
const int Ball::kYFieldNumber;
const int Ball::kVxFieldNumber;
const int Ball::kVyFieldNumber;
const int Ball::kRFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Ball::Ball()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_bouncingBallsMessages_2eproto::scc_info_Ball.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ballProto.Ball)
}
Ball::Ball(const Ball& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&id_) -
    reinterpret_cast<char*>(&x_)) + sizeof(id_));
  // @@protoc_insertion_point(copy_constructor:ballProto.Ball)
}

void Ball::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&x_)) + sizeof(id_));
}

Ball::~Ball() {
  // @@protoc_insertion_point(destructor:ballProto.Ball)
  SharedDtor();
}

void Ball::SharedDtor() {
}

void Ball::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Ball::descriptor() {
  ::protobuf_bouncingBallsMessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bouncingBallsMessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Ball& Ball::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_bouncingBallsMessages_2eproto::scc_info_Ball.base);
  return *internal_default_instance();
}


void Ball::Clear() {
// @@protoc_insertion_point(message_clear_start:ballProto.Ball)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&x_)) + sizeof(id_));
  _internal_metadata_.Clear();
}

bool Ball::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ballProto.Ball)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double x = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double y = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double vx = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &vx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double vy = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &vy_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double r = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u /* 49 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &r_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ballProto.Ball)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ballProto.Ball)
  return false;
#undef DO_
}

void Ball::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ballProto.Ball)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // double x = 2;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->x(), output);
  }

  // double y = 3;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->y(), output);
  }

  // double vx = 4;
  if (this->vx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->vx(), output);
  }

  // double vy = 5;
  if (this->vy() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->vy(), output);
  }

  // double r = 6;
  if (this->r() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->r(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ballProto.Ball)
}

::google::protobuf::uint8* Ball::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ballProto.Ball)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // double x = 2;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->x(), target);
  }

  // double y = 3;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->y(), target);
  }

  // double vx = 4;
  if (this->vx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->vx(), target);
  }

  // double vy = 5;
  if (this->vy() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->vy(), target);
  }

  // double r = 6;
  if (this->r() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->r(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ballProto.Ball)
  return target;
}

size_t Ball::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ballProto.Ball)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // double x = 2;
  if (this->x() != 0) {
    total_size += 1 + 8;
  }

  // double y = 3;
  if (this->y() != 0) {
    total_size += 1 + 8;
  }

  // double vx = 4;
  if (this->vx() != 0) {
    total_size += 1 + 8;
  }

  // double vy = 5;
  if (this->vy() != 0) {
    total_size += 1 + 8;
  }

  // double r = 6;
  if (this->r() != 0) {
    total_size += 1 + 8;
  }

  // int32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Ball::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ballProto.Ball)
  GOOGLE_DCHECK_NE(&from, this);
  const Ball* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Ball>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ballProto.Ball)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ballProto.Ball)
    MergeFrom(*source);
  }
}

void Ball::MergeFrom(const Ball& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ballProto.Ball)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
  if (from.vx() != 0) {
    set_vx(from.vx());
  }
  if (from.vy() != 0) {
    set_vy(from.vy());
  }
  if (from.r() != 0) {
    set_r(from.r());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void Ball::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ballProto.Ball)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Ball::CopyFrom(const Ball& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ballProto.Ball)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Ball::IsInitialized() const {
  return true;
}

void Ball::Swap(Ball* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Ball::InternalSwap(Ball* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(vx_, other->vx_);
  swap(vy_, other->vy_);
  swap(r_, other->r_);
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Ball::GetMetadata() const {
  protobuf_bouncingBallsMessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bouncingBallsMessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace ballProto
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ballProto::stateUpdate* Arena::CreateMaybeMessage< ::ballProto::stateUpdate >(Arena* arena) {
  return Arena::CreateInternal< ::ballProto::stateUpdate >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ballProto::Ball* Arena::CreateMaybeMessage< ::ballProto::Ball >(Arena* arena) {
  return Arena::CreateInternal< ::ballProto::Ball >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
