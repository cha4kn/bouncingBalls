// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: bouncingBallsMessages.proto
// Protobuf C++ Version: 5.27.2

#include "bouncingBallsMessages.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;

inline constexpr Ball::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : x_{0},
        y_{0},
        r_{0},
        id_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Ball::Ball(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct BallDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BallDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BallDefaultTypeInternal() {}
  union {
    Ball _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BallDefaultTypeInternal _Ball_default_instance_;

inline constexpr stateUpdate::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : balls_{},
        ballcount_{0},
        timeutc_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR stateUpdate::stateUpdate(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct stateUpdateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR stateUpdateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~stateUpdateDefaultTypeInternal() {}
  union {
    stateUpdate _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 stateUpdateDefaultTypeInternal _stateUpdate_default_instance_;
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_bouncingBallsMessages_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_bouncingBallsMessages_2eproto = nullptr;
const ::uint32_t
    TableStruct_bouncingBallsMessages_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::stateUpdate, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::stateUpdate, _impl_.balls_),
        PROTOBUF_FIELD_OFFSET(::stateUpdate, _impl_.ballcount_),
        PROTOBUF_FIELD_OFFSET(::stateUpdate, _impl_.timeutc_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::Ball, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::Ball, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::Ball, _impl_.x_),
        PROTOBUF_FIELD_OFFSET(::Ball, _impl_.y_),
        PROTOBUF_FIELD_OFFSET(::Ball, _impl_.r_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::stateUpdate)},
        {11, -1, -1, sizeof(::Ball)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::_stateUpdate_default_instance_._instance,
    &::_Ball_default_instance_._instance,
};
const char descriptor_table_protodef_bouncingBallsMessages_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\033bouncingBallsMessages.proto\"G\n\013stateUp"
    "date\022\024\n\005balls\030\001 \003(\0132\005.Ball\022\021\n\tballCount\030"
    "\002 \001(\005\022\017\n\007timeUTC\030\003 \001(\005\"3\n\004Ball\022\n\n\002id\030\001 \001"
    "(\005\022\t\n\001x\030\002 \001(\001\022\t\n\001y\030\003 \001(\001\022\t\n\001r\030\004 \001(\001b\006pro"
    "to3"
};
static ::absl::once_flag descriptor_table_bouncingBallsMessages_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_bouncingBallsMessages_2eproto = {
    false,
    false,
    163,
    descriptor_table_protodef_bouncingBallsMessages_2eproto,
    "bouncingBallsMessages.proto",
    &descriptor_table_bouncingBallsMessages_2eproto_once,
    nullptr,
    0,
    2,
    schemas,
    file_default_instances,
    TableStruct_bouncingBallsMessages_2eproto::offsets,
    file_level_enum_descriptors_bouncingBallsMessages_2eproto,
    file_level_service_descriptors_bouncingBallsMessages_2eproto,
};
// ===================================================================

class stateUpdate::_Internal {
 public:
};

stateUpdate::stateUpdate(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:stateUpdate)
}
inline PROTOBUF_NDEBUG_INLINE stateUpdate::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::stateUpdate& from_msg)
      : balls_{visibility, arena, from.balls_},
        _cached_size_{0} {}

stateUpdate::stateUpdate(
    ::google::protobuf::Arena* arena,
    const stateUpdate& from)
    : ::google::protobuf::Message(arena) {
  stateUpdate* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, ballcount_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, ballcount_),
           offsetof(Impl_, timeutc_) -
               offsetof(Impl_, ballcount_) +
               sizeof(Impl_::timeutc_));

  // @@protoc_insertion_point(copy_constructor:stateUpdate)
}
inline PROTOBUF_NDEBUG_INLINE stateUpdate::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : balls_{visibility, arena},
        _cached_size_{0} {}

inline void stateUpdate::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, ballcount_),
           0,
           offsetof(Impl_, timeutc_) -
               offsetof(Impl_, ballcount_) +
               sizeof(Impl_::timeutc_));
}
stateUpdate::~stateUpdate() {
  // @@protoc_insertion_point(destructor:stateUpdate)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void stateUpdate::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
stateUpdate::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(stateUpdate, _impl_._cached_size_),
              false,
          },
          &stateUpdate::MergeImpl,
          &stateUpdate::kDescriptorMethods,
          &descriptor_table_bouncingBallsMessages_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 0, 2> stateUpdate::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_stateUpdate_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::stateUpdate>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .Ball balls = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(stateUpdate, _impl_.balls_)}},
    // int32 ballCount = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(stateUpdate, _impl_.ballcount_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(stateUpdate, _impl_.ballcount_)}},
    // int32 timeUTC = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(stateUpdate, _impl_.timeutc_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(stateUpdate, _impl_.timeutc_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .Ball balls = 1;
    {PROTOBUF_FIELD_OFFSET(stateUpdate, _impl_.balls_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // int32 ballCount = 2;
    {PROTOBUF_FIELD_OFFSET(stateUpdate, _impl_.ballcount_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 timeUTC = 3;
    {PROTOBUF_FIELD_OFFSET(stateUpdate, _impl_.timeutc_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::Ball>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void stateUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:stateUpdate)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.balls_.Clear();
  ::memset(&_impl_.ballcount_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.timeutc_) -
      reinterpret_cast<char*>(&_impl_.ballcount_)) + sizeof(_impl_.timeutc_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* stateUpdate::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:stateUpdate)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .Ball balls = 1;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_balls_size());
       i < n; i++) {
    const auto& repfield = this->_internal_balls().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // int32 ballCount = 2;
  if (this->_internal_ballcount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_ballcount(), target);
  }

  // int32 timeUTC = 3;
  if (this->_internal_timeutc() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_timeutc(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:stateUpdate)
  return target;
}

::size_t stateUpdate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:stateUpdate)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated .Ball balls = 1;
  total_size += 1UL * this->_internal_balls_size();
  for (const auto& msg : this->_internal_balls()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // int32 ballCount = 2;
  if (this->_internal_ballcount() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_ballcount());
  }

  // int32 timeUTC = 3;
  if (this->_internal_timeutc() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_timeutc());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void stateUpdate::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<stateUpdate*>(&to_msg);
  auto& from = static_cast<const stateUpdate&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:stateUpdate)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_balls()->MergeFrom(
      from._internal_balls());
  if (from._internal_ballcount() != 0) {
    _this->_impl_.ballcount_ = from._impl_.ballcount_;
  }
  if (from._internal_timeutc() != 0) {
    _this->_impl_.timeutc_ = from._impl_.timeutc_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void stateUpdate::CopyFrom(const stateUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:stateUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void stateUpdate::InternalSwap(stateUpdate* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.balls_.InternalSwap(&other->_impl_.balls_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(stateUpdate, _impl_.timeutc_)
      + sizeof(stateUpdate::_impl_.timeutc_)
      - PROTOBUF_FIELD_OFFSET(stateUpdate, _impl_.ballcount_)>(
          reinterpret_cast<char*>(&_impl_.ballcount_),
          reinterpret_cast<char*>(&other->_impl_.ballcount_));
}

::google::protobuf::Metadata stateUpdate::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Ball::_Internal {
 public:
};

Ball::Ball(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Ball)
}
Ball::Ball(
    ::google::protobuf::Arena* arena, const Ball& from)
    : Ball(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Ball::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Ball::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, x_),
           0,
           offsetof(Impl_, id_) -
               offsetof(Impl_, x_) +
               sizeof(Impl_::id_));
}
Ball::~Ball() {
  // @@protoc_insertion_point(destructor:Ball)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Ball::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Ball::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(Ball, _impl_._cached_size_),
              false,
          },
          &Ball::MergeImpl,
          &Ball::kDescriptorMethods,
          &descriptor_table_bouncingBallsMessages_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2> Ball::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Ball_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::Ball>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // double r = 4;
    {::_pbi::TcParser::FastF64S1,
     {33, 63, 0, PROTOBUF_FIELD_OFFSET(Ball, _impl_.r_)}},
    // int32 id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Ball, _impl_.id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Ball, _impl_.id_)}},
    // double x = 2;
    {::_pbi::TcParser::FastF64S1,
     {17, 63, 0, PROTOBUF_FIELD_OFFSET(Ball, _impl_.x_)}},
    // double y = 3;
    {::_pbi::TcParser::FastF64S1,
     {25, 63, 0, PROTOBUF_FIELD_OFFSET(Ball, _impl_.y_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 id = 1;
    {PROTOBUF_FIELD_OFFSET(Ball, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // double x = 2;
    {PROTOBUF_FIELD_OFFSET(Ball, _impl_.x_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double y = 3;
    {PROTOBUF_FIELD_OFFSET(Ball, _impl_.y_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double r = 4;
    {PROTOBUF_FIELD_OFFSET(Ball, _impl_.r_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void Ball::Clear() {
// @@protoc_insertion_point(message_clear_start:Ball)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.x_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.id_) -
      reinterpret_cast<char*>(&_impl_.x_)) + sizeof(_impl_.id_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* Ball::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Ball)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 id = 1;
  if (this->_internal_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_id(), target);
  }

  // double x = 2;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_x = this->_internal_x();
  ::uint64_t raw_x;
  memcpy(&raw_x, &tmp_x, sizeof(tmp_x));
  if (raw_x != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        2, this->_internal_x(), target);
  }

  // double y = 3;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_y = this->_internal_y();
  ::uint64_t raw_y;
  memcpy(&raw_y, &tmp_y, sizeof(tmp_y));
  if (raw_y != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        3, this->_internal_y(), target);
  }

  // double r = 4;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_r = this->_internal_r();
  ::uint64_t raw_r;
  memcpy(&raw_r, &tmp_r, sizeof(tmp_r));
  if (raw_r != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        4, this->_internal_r(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Ball)
  return target;
}

::size_t Ball::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Ball)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // double x = 2;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_x = this->_internal_x();
  ::uint64_t raw_x;
  memcpy(&raw_x, &tmp_x, sizeof(tmp_x));
  if (raw_x != 0) {
    total_size += 9;
  }

  // double y = 3;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_y = this->_internal_y();
  ::uint64_t raw_y;
  memcpy(&raw_y, &tmp_y, sizeof(tmp_y));
  if (raw_y != 0) {
    total_size += 9;
  }

  // double r = 4;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_r = this->_internal_r();
  ::uint64_t raw_r;
  memcpy(&raw_r, &tmp_r, sizeof(tmp_r));
  if (raw_r != 0) {
    total_size += 9;
  }

  // int32 id = 1;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Ball::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Ball*>(&to_msg);
  auto& from = static_cast<const Ball&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Ball)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_x = from._internal_x();
  ::uint64_t raw_x;
  memcpy(&raw_x, &tmp_x, sizeof(tmp_x));
  if (raw_x != 0) {
    _this->_impl_.x_ = from._impl_.x_;
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_y = from._internal_y();
  ::uint64_t raw_y;
  memcpy(&raw_y, &tmp_y, sizeof(tmp_y));
  if (raw_y != 0) {
    _this->_impl_.y_ = from._impl_.y_;
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_r = from._internal_r();
  ::uint64_t raw_r;
  memcpy(&raw_r, &tmp_r, sizeof(tmp_r));
  if (raw_r != 0) {
    _this->_impl_.r_ = from._impl_.r_;
  }
  if (from._internal_id() != 0) {
    _this->_impl_.id_ = from._impl_.id_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Ball::CopyFrom(const Ball& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Ball)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Ball::InternalSwap(Ball* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Ball, _impl_.id_)
      + sizeof(Ball::_impl_.id_)
      - PROTOBUF_FIELD_OFFSET(Ball, _impl_.x_)>(
          reinterpret_cast<char*>(&_impl_.x_),
          reinterpret_cast<char*>(&other->_impl_.x_));
}

::google::protobuf::Metadata Ball::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_bouncingBallsMessages_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
