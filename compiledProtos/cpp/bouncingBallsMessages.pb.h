// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bouncingBallsMessages.proto

#ifndef PROTOBUF_INCLUDED_bouncingBallsMessages_2eproto
#define PROTOBUF_INCLUDED_bouncingBallsMessages_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_bouncingBallsMessages_2eproto 

namespace protobuf_bouncingBallsMessages_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_bouncingBallsMessages_2eproto
namespace ballProto {
class Ball;
class BallDefaultTypeInternal;
extern BallDefaultTypeInternal _Ball_default_instance_;
class stateUpdate;
class stateUpdateDefaultTypeInternal;
extern stateUpdateDefaultTypeInternal _stateUpdate_default_instance_;
}  // namespace ballProto
namespace google {
namespace protobuf {
template<> ::ballProto::Ball* Arena::CreateMaybeMessage<::ballProto::Ball>(Arena*);
template<> ::ballProto::stateUpdate* Arena::CreateMaybeMessage<::ballProto::stateUpdate>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace ballProto {

// ===================================================================

class stateUpdate : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ballProto.stateUpdate) */ {
 public:
  stateUpdate();
  virtual ~stateUpdate();

  stateUpdate(const stateUpdate& from);

  inline stateUpdate& operator=(const stateUpdate& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  stateUpdate(stateUpdate&& from) noexcept
    : stateUpdate() {
    *this = ::std::move(from);
  }

  inline stateUpdate& operator=(stateUpdate&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const stateUpdate& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const stateUpdate* internal_default_instance() {
    return reinterpret_cast<const stateUpdate*>(
               &_stateUpdate_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(stateUpdate* other);
  friend void swap(stateUpdate& a, stateUpdate& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline stateUpdate* New() const final {
    return CreateMaybeMessage<stateUpdate>(NULL);
  }

  stateUpdate* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<stateUpdate>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const stateUpdate& from);
  void MergeFrom(const stateUpdate& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(stateUpdate* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ballProto.Ball balls = 1;
  int balls_size() const;
  void clear_balls();
  static const int kBallsFieldNumber = 1;
  ::ballProto::Ball* mutable_balls(int index);
  ::google::protobuf::RepeatedPtrField< ::ballProto::Ball >*
      mutable_balls();
  const ::ballProto::Ball& balls(int index) const;
  ::ballProto::Ball* add_balls();
  const ::google::protobuf::RepeatedPtrField< ::ballProto::Ball >&
      balls() const;

  // int32 ballCount = 2;
  void clear_ballcount();
  static const int kBallCountFieldNumber = 2;
  ::google::protobuf::int32 ballcount() const;
  void set_ballcount(::google::protobuf::int32 value);

  // int32 timeUTC = 3;
  void clear_timeutc();
  static const int kTimeUTCFieldNumber = 3;
  ::google::protobuf::int32 timeutc() const;
  void set_timeutc(::google::protobuf::int32 value);

  // int32 xMax = 4;
  void clear_xmax();
  static const int kXMaxFieldNumber = 4;
  ::google::protobuf::int32 xmax() const;
  void set_xmax(::google::protobuf::int32 value);

  // int32 yMax = 5;
  void clear_ymax();
  static const int kYMaxFieldNumber = 5;
  ::google::protobuf::int32 ymax() const;
  void set_ymax(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ballProto.stateUpdate)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::ballProto::Ball > balls_;
  ::google::protobuf::int32 ballcount_;
  ::google::protobuf::int32 timeutc_;
  ::google::protobuf::int32 xmax_;
  ::google::protobuf::int32 ymax_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_bouncingBallsMessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Ball : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ballProto.Ball) */ {
 public:
  Ball();
  virtual ~Ball();

  Ball(const Ball& from);

  inline Ball& operator=(const Ball& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Ball(Ball&& from) noexcept
    : Ball() {
    *this = ::std::move(from);
  }

  inline Ball& operator=(Ball&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Ball& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Ball* internal_default_instance() {
    return reinterpret_cast<const Ball*>(
               &_Ball_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(Ball* other);
  friend void swap(Ball& a, Ball& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Ball* New() const final {
    return CreateMaybeMessage<Ball>(NULL);
  }

  Ball* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Ball>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Ball& from);
  void MergeFrom(const Ball& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Ball* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double x = 2;
  void clear_x();
  static const int kXFieldNumber = 2;
  double x() const;
  void set_x(double value);

  // double y = 3;
  void clear_y();
  static const int kYFieldNumber = 3;
  double y() const;
  void set_y(double value);

  // double vx = 4;
  void clear_vx();
  static const int kVxFieldNumber = 4;
  double vx() const;
  void set_vx(double value);

  // double vy = 5;
  void clear_vy();
  static const int kVyFieldNumber = 5;
  double vy() const;
  void set_vy(double value);

  // double r = 6;
  void clear_r();
  static const int kRFieldNumber = 6;
  double r() const;
  void set_r(double value);

  // int32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ballProto.Ball)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double x_;
  double y_;
  double vx_;
  double vy_;
  double r_;
  ::google::protobuf::int32 id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_bouncingBallsMessages_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// stateUpdate

// repeated .ballProto.Ball balls = 1;
inline int stateUpdate::balls_size() const {
  return balls_.size();
}
inline void stateUpdate::clear_balls() {
  balls_.Clear();
}
inline ::ballProto::Ball* stateUpdate::mutable_balls(int index) {
  // @@protoc_insertion_point(field_mutable:ballProto.stateUpdate.balls)
  return balls_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::ballProto::Ball >*
stateUpdate::mutable_balls() {
  // @@protoc_insertion_point(field_mutable_list:ballProto.stateUpdate.balls)
  return &balls_;
}
inline const ::ballProto::Ball& stateUpdate::balls(int index) const {
  // @@protoc_insertion_point(field_get:ballProto.stateUpdate.balls)
  return balls_.Get(index);
}
inline ::ballProto::Ball* stateUpdate::add_balls() {
  // @@protoc_insertion_point(field_add:ballProto.stateUpdate.balls)
  return balls_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ballProto::Ball >&
stateUpdate::balls() const {
  // @@protoc_insertion_point(field_list:ballProto.stateUpdate.balls)
  return balls_;
}

// int32 ballCount = 2;
inline void stateUpdate::clear_ballcount() {
  ballcount_ = 0;
}
inline ::google::protobuf::int32 stateUpdate::ballcount() const {
  // @@protoc_insertion_point(field_get:ballProto.stateUpdate.ballCount)
  return ballcount_;
}
inline void stateUpdate::set_ballcount(::google::protobuf::int32 value) {
  
  ballcount_ = value;
  // @@protoc_insertion_point(field_set:ballProto.stateUpdate.ballCount)
}

// int32 timeUTC = 3;
inline void stateUpdate::clear_timeutc() {
  timeutc_ = 0;
}
inline ::google::protobuf::int32 stateUpdate::timeutc() const {
  // @@protoc_insertion_point(field_get:ballProto.stateUpdate.timeUTC)
  return timeutc_;
}
inline void stateUpdate::set_timeutc(::google::protobuf::int32 value) {
  
  timeutc_ = value;
  // @@protoc_insertion_point(field_set:ballProto.stateUpdate.timeUTC)
}

// int32 xMax = 4;
inline void stateUpdate::clear_xmax() {
  xmax_ = 0;
}
inline ::google::protobuf::int32 stateUpdate::xmax() const {
  // @@protoc_insertion_point(field_get:ballProto.stateUpdate.xMax)
  return xmax_;
}
inline void stateUpdate::set_xmax(::google::protobuf::int32 value) {
  
  xmax_ = value;
  // @@protoc_insertion_point(field_set:ballProto.stateUpdate.xMax)
}

// int32 yMax = 5;
inline void stateUpdate::clear_ymax() {
  ymax_ = 0;
}
inline ::google::protobuf::int32 stateUpdate::ymax() const {
  // @@protoc_insertion_point(field_get:ballProto.stateUpdate.yMax)
  return ymax_;
}
inline void stateUpdate::set_ymax(::google::protobuf::int32 value) {
  
  ymax_ = value;
  // @@protoc_insertion_point(field_set:ballProto.stateUpdate.yMax)
}

// -------------------------------------------------------------------

// Ball

// int32 id = 1;
inline void Ball::clear_id() {
  id_ = 0;
}
inline ::google::protobuf::int32 Ball::id() const {
  // @@protoc_insertion_point(field_get:ballProto.Ball.id)
  return id_;
}
inline void Ball::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:ballProto.Ball.id)
}

// double x = 2;
inline void Ball::clear_x() {
  x_ = 0;
}
inline double Ball::x() const {
  // @@protoc_insertion_point(field_get:ballProto.Ball.x)
  return x_;
}
inline void Ball::set_x(double value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:ballProto.Ball.x)
}

// double y = 3;
inline void Ball::clear_y() {
  y_ = 0;
}
inline double Ball::y() const {
  // @@protoc_insertion_point(field_get:ballProto.Ball.y)
  return y_;
}
inline void Ball::set_y(double value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:ballProto.Ball.y)
}

// double vx = 4;
inline void Ball::clear_vx() {
  vx_ = 0;
}
inline double Ball::vx() const {
  // @@protoc_insertion_point(field_get:ballProto.Ball.vx)
  return vx_;
}
inline void Ball::set_vx(double value) {
  
  vx_ = value;
  // @@protoc_insertion_point(field_set:ballProto.Ball.vx)
}

// double vy = 5;
inline void Ball::clear_vy() {
  vy_ = 0;
}
inline double Ball::vy() const {
  // @@protoc_insertion_point(field_get:ballProto.Ball.vy)
  return vy_;
}
inline void Ball::set_vy(double value) {
  
  vy_ = value;
  // @@protoc_insertion_point(field_set:ballProto.Ball.vy)
}

// double r = 6;
inline void Ball::clear_r() {
  r_ = 0;
}
inline double Ball::r() const {
  // @@protoc_insertion_point(field_get:ballProto.Ball.r)
  return r_;
}
inline void Ball::set_r(double value) {
  
  r_ = value;
  // @@protoc_insertion_point(field_set:ballProto.Ball.r)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace ballProto

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_bouncingBallsMessages_2eproto
